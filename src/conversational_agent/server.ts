import express, { Request, Response } from 'express';
import dotenv from 'dotenv';
import { OpenAI } from 'openai';

// Load environment variables from the .env file
dotenv.config();

var postmark = require("postmark");

// Use the Postmark API key from environment variables
var client = new postmark.ServerClient(process.env.POSTMARK_API_KEY || '');

// Configure OpenAI with your API key in .env file
const openai = new OpenAI({
    apiKey: process.env.OPENAI_API_KEY || '', // Ensure the key is present in your .env file
});

const app = express();
const PORT = 3000;

// Middleware to parse requests as JSON
app.use(express.json());

// Function to generate a response with OpenAI
async function generateAIResponse(emailBody: string): Promise<string> {
    try {
        const response = await openai.chat.completions.create({
            model: "gpt-3.5-turbo", // Or "gpt-4" if you have access to it
            messages: [
                { role: "system", content: "You are an assistant that helps to answer emails." },
                { role: "user", content: emailBody }
            ],
        });

        // Return the response generated by AI
        return response.choices[0].message?.content || "No response";
    } catch (error) {
        console.error("Error with OpenAI API:", error);
        return "Sorry, I couldn't generate a response.";
    }
}

// Webhook to receive incoming emails
app.post('/webhook', async (req: Request, res: Response) => {
    res.status(200).send('Webhook received');

    const body = req.body;
    const isSpam = req.headers['X-Spam-Status'];

    if (isSpam) {
        console.log("Spam received from " + body["From"]);
    } else {
        console.log("Email received from " + body["From"] + " on " + body["Date"] + " : \n" + body["TextBody"]);

        // Generate a response from AI based on the received email text
        const aiResponse = await generateAIResponse(body["TextBody"]);

        // Send a reply email with the content generated by OpenAI
        client.sendEmail({
            "From": "louis.ferry@telecomnancy.net",  // Replace with a verified email
            "To": body["From"],
            "Subject": "Re: " + body["Subject"],
            "TextBody": aiResponse,  // Use the response generated by AI
            "MessageStream": "outbound"
        });

        console.log("AI response sent to:", body["From"]);
    }
});

// Start the server
app.listen(PORT, () => {
    console.log(`Server started at http://localhost:${PORT}`);
    console.log(`To make the webhook accessible on the internet:\nrun 'ngrok http ${PORT}'`);
});
